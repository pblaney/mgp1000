// #################################################### \\
// ~~~~~~~~~~~~~~~~ LSF CONFIGURATION ~~~~~~~~~~~~~~~~~ \\

executor {
    name = 'lsf'
    perJobMemLimit = true
    queueSize = "${params.queue_size}"
    queueStatInterval = '3 min'
    exitReadTimeout = '60 min'
    submitRateLimit = '10 sec'
}

// Profiles for individual modules of the MGP1000: Preprocessing, Germline, and Somatic
profiles {
    
    // ############################################ \\
    // ~~~~~~~~~~ PREPROCESSING PROFILE ~~~~~~~~~~~ \\
    preprocessing {
        singularity.enabled = true
        singularity.autoMounts = true

        process {
            executor = 'lsf'
            errorStrategy = { task.exitStatus in [130,137,140] ? 'retry' : 'finish' }
            maxRetries = 3

            withName: mergeLaneSplitFastqs_mergelane {
                container = "containers/base.simg"
                cpus = 1
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: gatherInputFastqs_fastqgatherer {
                container = "containers/base.simg"
                cpus = 1
                memory = params.memory ?: { 256.MB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: revertMappedBam_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 18.GB * task.attempt }
                time = { 12.h * task.attempt + 36.h }
            }
            withName: bamToFastq_biobambam {
                container = "containers/biobambam-2.0.87.simg"
                cpus = 1
                memory = params.memory ?: { 256.MB * task.attempt }
                time = { 12.h * task.attempt + 48.h }
            }
            withName: fastqTrimming_trimmomatic {
                container = "containers/trimmomatic-0.36.simg"
                cpus = params.cpus ?: 12
                memory = params.memory ?: { 4.GB * task.attempt + 8.GB * task.cpus }
                time = { 12.h * task.attempt + 24.h }
            }
            withName: fastqQualityControlMetrics_fastqc {
                container = "containers/fastqc-0.11.9.simg"
                cpus = 1
                memory = params.memory ?: { 512.MB * task.attempt }
                time = { 13.h * task.attempt }
            }
            withName: alignment_bwa {
                container = "containers/bwa-0.7.17-sambamba-0.7.1.simg"
                cpus = params.cpus ?: 17
                memory = params.memory ?: { 24.GB * task.attempt + 6.GB * task.cpus }
                time = { 12.h * task.attempt + 48.h }
            }
            withName: postAlignmentFlagstats_sambamba {
                container = "containers/sambamba-0.7.1.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 1.GB * task.attempt + 1.GB * task.cpus }
                time = { 2.h * task.attempt }
            }
            withName: fixMateInformationAndSort_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 2
                memory = params.memory ?: { 24.GB * task.attempt + 8.GB * task.cpus }
                time = { 12.h * task.attempt + 24.h }
            }
            withName: markDuplicatesAndIndex_sambamba {
                container = "containers/sambamba-0.7.1.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 8.GB * task.attempt + 4.GB * task.cpus }
                time = { 12.h * task.attempt + 12.h }
            }
            withName: localAndGlobalRealignment_abra2 {
                container = "containers/abra-2.23.simg"
                cpus = 6
                memory = params.memory ?: { 4.GB * task.attempt + 2.GB * task.cpus }
                time = { 3.h * task.attempt + 3.h }
            }
            withName: downsampleBam_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 2
                memory = params.memory ?: { 4.GB * task.attempt + 8.GB * task.cpus }
                time = { 6.h * task.attempt + 2.h }
            }
            withName: baseRecalibrator_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 8.GB * task.attempt }
                time = { 6.h * task.attempt + 2.h }
            }
            withName: applyBqsr_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 2
                memory = params.memory ?: { 8.GB * task.attempt + 4.GB * task.cpus }
                time = { 8.h * task.attempt + 4.h }
            }
            withName: collectWgsMetrics_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 12.GB * task.attempt }
                time = { 8.h * task.attempt + 4.h }
            }
            withName: collectGcBiasMetrics_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 12.GB * task.attempt }
                time = { 4.h * task.attempt + 4.h }
            }
            withName: collectHsMetrics_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 12.GB * task.attempt }
                time = { 6.h * task.attempt + 8.h }
            }
        }
    }

    // ############################################ \\
    // ~~~~~~~~~~~~~ GERMLINE PROFILE ~~~~~~~~~~~~~ \\
    germline {
        singularity.enabled = true
        singularity.autoMounts = true

        process {
            executor = 'lsf'
            errorStrategy = { task.exitStatus in [130,137,140] ? 'retry' : 'finish' }
            maxRetries = 3

            withName: splitIntervalList_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = 1.GB
                time = 1.h
            }
            withName: haplotypeCaller_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 10.GB * task.attempt }
                time = { 13.h * task.attempt }
            }
            withName: mergeAndSortGvcfs_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 14.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: combineAllGvcfs_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 48.GB * task.attempt }
                time = { 128.h * task.attempt }
            }
            withName: jointGenotyping_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: {48.GB * task.attempt }
                time = { 128.h * task.attempt }
            }
            withName: excessHeterozygosityHardFilter_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 2.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: indelVariantRecalibration_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 6.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: snpVariantRecalibration_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 10.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: applyIndelAndSnpVqsr_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 4.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: splitMultiallelicAndLeftNormalizeVcf_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = params.cpus ?: 8
                memory = params.memory ?: { 1.GB * task.attempt * task.cpus }
                time = { 1.h * task.attempt }
            }
            withName: downloadVepAnnotationReferences_vep {
                container = "containers/vep-101.0.simg"
                cpus = 1
                memory = params.memory ?: 4.GB
                time = { 8.h * task.attempt }
            }
            withName: annotateGermlineVcf_vep {
                container = "containers/vep-101.0.simg"
                cpus = 1
                memory = params.memory ?: { 4.GB * task.attempt }
                time = { 18.h * task.attempt }
            }
            withName: alleleFrequencyEstimation_angsd {
                container = "containers/angsd-0.941.simg"
                cpus = params.cpus ?: 2
                memory = params.memory ?: { 32.GB * task.attempt + 8.GB * task.cpus }
                time = { 6.h * task.attempt + 8.h }
            }
            withName: ancestryEstimation_fastngsadmix {
                container = "containers/fastngsadmix-1.0.simg"
                cpus = 1
                memory = params.memory ?: { 8.GB * task.attempt }
                time = { 8.h * task.attempt }
            }
        }
    }

    // ############################################ \\
    // ~~~~~~~~~~~~~~ SOMATIC PROFILE ~~~~~~~~~~~~~ \\
    somatic {
        singularity.enabled = true
        singularity.autoMounts = true

        process {
            executor = 'lsf'
            errorStrategy = { task.exitStatus in [130,137,140] ? 'retry' : 'finish' }
            maxRetries = 3

            withName: identifySampleSex_allelecount {
                container = "containers/allelecount-4.2.1.simg"
                cpus = 1
                memory = params.memory ?: { 256.MB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: telomereLengthEstimation_telomerecat {
                container = "containers/telomerecat-3.4.0.simg"
                cpus = params.cpus ?: 8
                memory = params.memory ?: { 2.GB * task.attempt + 1.GB * task.cpus }
                time = { 8.h * task.attempt }
            }
            withName: telomereEstimation_telomerehunter {
                container = "containers/telomerehunter-1.1.0.simg"
                cpus = params.cpus ?: 2
                memory = params.memory ?: { 2.GB * task.attempt + 1.GB * task.cpus }
                time = { 8.h * task.attempt }
            }
            withName: bamPileupForConpair_conpair {
                container = "containers/conpair-0.2.simg"
                cpus = 1
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: concordanceAndContaminationEstimation_conpair {
                container = "containers/conpair-0.2.simg"
                cpus = 1
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: snvAndIndelCalling_varscan {
                container = "containers/varscan-2.3.9-samtools-1.11.simg"
                cpus = 1
                memory = params.memory ?: { 8.GB * task.attempt }
                time = { 8.h * task.attempt }
            }
            withName: concatenateVarscanPerChromosomeVcfs_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: filterRawSnvAndIndels_varscan {
                container = "containers/varscan-2.3.9-samtools-1.11.simg"
                cpus = 1
                memory = params.memory ?: { 8.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: bamReadcountForVarscanFpFilter_bamreadcount {
                container = "containers/bam-readcount-0.8.simg"
                cpus = params.cpus ?: 2
                memory = params.memory ?: { 2.GB * task.attempt + 3.GB * task.cpus }
                time = { 4.h * task.attempt }
            }
            withName: falsePositivefilterSnvAndIndels_varscan {
                container = "containers/varscan-2.3.9-samtools-1.11.simg"
                cpus = 1
                memory = params.memory ?: { 8.GB * task.attempt }
                time = { 8.h * task.attempt }
            }
            withName: splitMultiallelicAndLeftNormalizeVarscanVcf_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: mutect2GnomadReferenceVcfPrep_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 1.GB * task.cpus }
                time = 13.h
            }
            withName: snvAndIndelCalling_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = params.cpus ?: 2
                memory = params.memory ?: { 2.GB * task.attempt + 4.GB * task.cpus }
                time = { 6.h * task.attempt + 8.h }
            }
            withName: mergeAndSortMutect2Vcfs_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 12.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: mergeMutect2StatsForFiltering_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 12.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: pileupSummariesForMutect2Contamination_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 12.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: gatherTumorPileupSummariesForMutect2Contamination_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 12.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: gatherNormalPileupSummariesForMutect2Contamination_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 12.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: mutect2ContaminationCalculation_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 12.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: mutect2VariantFiltration_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                memory = params.memory ?: { 12.GB * task.attempt }
                time = { 8.h * task.attempt }
            }
            withName: splitMultiallelicAndLeftNormalizeMutect2Vcf_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: splitMutectSnvsAndIndelsForConsensus_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 1.MB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: binReadCoverage_copycat {
                container = "containers/bedtools-2.30.0.simg"
                cpus = 1
                memory = params.memory ?: { 8.GB * task.attempt }
                time = { 16.h * task.attempt }
            }
            withName: downloadBattenbergReferences_battenberg {
                container = "containers/base.simg"
                cpus = 1
                memory = 8.GB
                time = 14.h
            }
            withName: cnvCalling_battenberg {
                container = "containers/battenberg-2.2.9.simg"
                cpus = params.cpus ?: 6
                memory = params.memory ?: { 64.GB * task.attempt + 8.GB * task.cpus }
                time = { 8.h * task.attempt }
            }
            withName: consensusCnvPrep_battenberg {
                container = "containers/bedtools-2.30.0.simg"
                cpus = 1
                memory = params.memory ?: { 256.MB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: bamMpileupForControlFreec_samtools {
                container = "containers/control-freec-11.6.simg"
                cpus = 1
                memory = params.memory ?: { 4.GB * task.attempt }
                time = { 8.h * task.attempt }
            }
            withName: mergeMpileupsForControlFreec_samtools {
                container = "containers/control-freec-11.6.simg"
                cpus = 1
                memory = params.memory ?: { 8.GB * task.attempt }
                time = { 8.h * task.attempt }
            }
            withName: cnvCalling_controlfreec {
                container = "containers/control-freec-11.6.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 2.GB * task.attempt + 2.GB * task.cpus }
                time = { 8.h * task.attempt }
            }
            withName: cnvPredictionPostProcessing_controlfreec {
                container = "containers/control-freec-11.6.simg"
                cpus = 1
                memory = params.memory ?: { 4.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: consensusCnvPrep_controlfreec {
                container = "containers/bedtools-2.30.0.simg"
                cpus = 1
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: bamprocessPerChromosome_sclust {
                container = "containers/sclust-1.1.simg"
                cpus = 1
                memory = params.memory ?: { 4.GB * task.attempt }
                time = { 4.h * task.attempt }
            }
            withName: mergeBamprocessData_sclust {
                container = "containers/sclust-1.1.simg"
                cpus = 1
                memory = params.memory ?: { 8.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: prepareVcfForSclust_vcftools {
                container = "containers/vcftools-0.1.16.simg"
                cpus = 1
                memory = params.memory ?: { 4.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: cnvCalling_sclust {
                container = "containers/sclust-1.1.simg"
                cpus = 1
                memory = params.memory ?: { 16.GB * task.attempt }
                time = { 4.h * task.attempt }
            }
            withName: mutationalClustering_sclust {
                container = "containers/sclust-1.1.simg"
                cpus = 1
                memory = params.memory ?: { 2.GB * task.attempt }
                time = { 2.h * task.attempt }
            }
            withName: consensusCnvPrep_sclust {
                container = "containers/sclust-1.1.simg"
                cpus = 1
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: snpPileup_facets {
                container = "containers/iarc-facets-2.0.simg"
                cpus = 1
                memory = params.memory ?: { 8.GB * task.attempt }
                time = { 14.h * task.attempt }
            }
            withName: cnvCalling_facets {
                container = "containers/iarc-facets-2.0.simg"
                cpus = 1
                memory = params.memory ?: { 28.GB * task.attempt }
                time = { 4.h * task.attempt }
            }
            withName: consensusCnvPrep_facets {
                container = "containers/iarc-facets-2.0.simg"
                cpus = 1
                memory = params.memory ?: { 256.MB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: svAndIndelCalling_manta {
                container = "containers/manta-1.6.0.simg"
                cpus = params.cpus ?: 12
                memory = params.memory ?: { 2.GB * task.attempt + 1.GB * task.cpus }
                time = { 6.h * task.attempt }
            }
            withName: filterAndPostprocessMantaVcf_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = 1
                memory = params.memory ?: { 256.MB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: snvAndIndelCalling_strelka {
                container = "containers/strelka-2.9.10.simg"
                cpus = params.cpus ?: 8
                memory = params.memory ?: { 2.GB * task.attempt + 2.GB * task.cpus }
                time = { 14.h * task.attempt }
            }
            withName: splitMultiallelicAndLeftNormalizeStrelkaVcf_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: svAndIndelCalling_svaba {
                container = "containers/svaba-1.1.3.simg"
                cpus = params.cpus ?: 16
                memory = params.memory ?: { 2.GB * task.attempt + 1.GB * task.cpus }
                time = { 8.h * task.attempt }
            }
            withName: filterAndPostprocessSvabaVcf_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = 1
                memory = params.memory ?: { 256.MB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: leftNormalizeSvabaVcf_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: svAndIndelCalling_delly {
                container = "containers/delly-0.8.7.simg"
                cpus = 2
                memory = params.memory ?: { 2.GB * task.attempt + 8.GB * task.cpus }
                time = { 14.h * task.attempt }
            }
            withName: filterAndPostprocessDellyVcf_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = 1
                memory = params.memory ?: { 256.MB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: igRearrangementsAndTranslocations_igcaller {
                container = "containers/igcaller-1.2.1.simg"
                cpus = params.cpus ?: 2
                memory = params.memory ?: { 2.GB * task.attempt + 8.GB * task.cpus }
                time = { 8.h * task.attempt }
            }
            withName: mergeAndGenerateConsensusSnvCalls_mergevcf {
                container = "containers/mergevcf-0.2.simg"
                cpus = 1
                memory = params.memory ?: { 4.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: mergeAndGenerateConsensusIndelCalls_mergevcf {
                container = "containers/mergevcf-0.2.simg"
                cpus = 1
                memory = params.memory ?: { 4.GB * task.attempt }
                time = { 3.h * task.attempt }
            }
            withName: consensusSnvMpileup_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 6.GB * task.attempt }
                time = { 4.h * task.attempt }
            }
            withName: addSamplesToConsensusSnvVcf_vatools {
                container = "containers/vcftools-0.1.16.simg"
                cpus = 1
                memory = params.memory ?: { 4.GB * task.attempt }
                time = { 4.h * task.attempt }
            }
            withName: annotateConsensusSnvVcfFormatColumnAndFilter_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = 1
                memory = params.memory ?: { 6.GB * task.attempt }
                time = { 4.h * task.attempt }
            }
            withName: repeatsAndStrandBiasFilterSnvs_vcftools {
                container = "containers/vcftools-0.1.16.simg"
                cpus = 1
                memory = params.memory ?: { 6.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: consensusIndelMpileup_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 6.GB * task.attempt }
                time = { 4.h * task.attempt }
            }
            withName: addSamplesToConsensusIndelVcf_vatools {
                container = "containers/vcftools-0.1.16.simg"
                cpus = 1
                memory = params.memory ?: { 4.GB * task.attempt }
                time = { 4.h * task.attempt }
            }
            withName: annotateConsensusIndelVcfFormatColumnAndFilter_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = 1
                memory = params.memory ?: { 6.GB * task.attempt }
                time = { 4.h * task.attempt }
            }
            withName: repeatsAndStrandBiasFilterIndels_vcftools {
                container = "containers/vcftools-0.1.16.simg"
                cpus = 1
                memory = params.memory ?: { 6.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: fourWayMergeAndGenerateConsensusCnvCalls_bedtools {
                container = "containers/bedtools-2.30.0.simg"
                cpus = 1
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: threeWayMergeAndGenerateConsensusCnvCalls_bedtools {
                container = "containers/bedtools-2.30.0.simg"
                cpus = 1
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: highQualityTransformConsensusCnvs_tidyverse {
                container = "containers/tidyverse-1.3.1.simg"
                cpus = 1
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 2.h * task.attempt }
            }
            withName: downloadAnnotsvAnnotationReferences_annotsv {
                container = "containers/annotsv-3.1.1.simg"
                cpus = 1
                memory = params.memory ?: 4.GB
                time = { 13.h * task.attempt }
            }
            withName: annotateConsensusCnvCalls_annotsv {
                container = "containers/annotsv-3.1.1.simg"
                cpus = 1
                memory = params.memory ?: 4.GB
                time = { 1.h * task.attempt }
            }
            withName: threeWayMergeSubclonalCnvCalls {
                container = "containers/base.simg"
                cpus = 1
                memory = 256.MB
                time = 30.m
            }
            withName: twoWayMergeSubclonalCnvCalls {
                container = "containers/base.simg"
                cpus = 1
                memory = 256.MB
                time = 30.m
            }
            withName: mergeAndGenerateConsensusSvCalls_survivor {
                container = "containers/survivor-1.0.7.simg"
                cpus = 1
                memory = params.memory ?: { 1.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: prepConsensusSvVcfForFpFiltering_vatools {
                container = "containers/vcftools-0.1.16.simg"
                cpus = 1
                memory = params.memory ?: { 2.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: falsePostiveSvFiltering_duphold {
                container = "containers/duphold-0.2.3.simg"
                cpus = params.cpus ?: 4
                memory = params.memory ?: { 1.GB * task.attempt + 2.GB * task.cpus }
                time = { 1.h * task.attempt }
            }
            withName: extractFpFilterPassingSvCalls_bcftools {
                container = "containers/bcftools-1.10.2.simg"
                cpus = 1
                memory = params.memory ?: { 256.MB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: annotateConsensusSvCalls_annotsv {
                container = "containers/annotsv-3.1.1.simg"
                cpus = 1
                memory = params.memory ?: { 4.GB * task.attempt }
                time = { 1.h * task.attempt }
            }
            withName: mergeMetadataOutput {
                container = "containers/base.simg"
                cpus = 1
                memory = 256.MB
                time = 30.m
            }
            withName: downloadVepAnnotationReferences_vep {
                container = "containers/vep-101.0.simg"
                cpus = 1
                memory = params.memory ?: 4.GB
                time = { 8.h * task.attempt }
            }
            withName: annotateSnvAndIndelVcf_vep {
                container = "containers/vep-101.0.simg"
                cpus = 1
                memory = params.memory ?: { 4.GB * task.attempt }
                time = { 13.h * task.attempt }
            }
        }
    }
}

// #################################################### \\
